# Generated by Django 4.1 on 2022-10-02 14:07

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('subTotal', models.IntegerField(blank=True, default=0)),
                ('total', models.IntegerField(blank=True, default=0)),
                ('subTotalMonthly', models.IntegerField(blank=True, default=0)),
                ('totalMonthly', models.IntegerField(blank=True, default=0)),
                ('monthlyArray', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), default=list, size=None)),
                ('numPayment', models.IntegerField(blank=True, null=True)),
                ('endDate', models.DateTimeField(default=datetime.datetime(2022, 10, 2, 10, 7, 6, 984528))),
                ('consult', models.BooleanField(default=False)),
                ('sendingForPayment', models.BooleanField(default=False)),
                ('priceID', models.CharField(blank=True, max_length=150, null=True)),
                ('paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('question1', models.TextField(blank=True)),
                ('question2', models.TextField(blank=True)),
                ('question3', models.TextField(blank=True)),
                ('question4', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('subTotal', models.IntegerField(blank=True, default=0)),
                ('total', models.IntegerField(blank=True, default=0)),
                ('subTotalMonthly', models.IntegerField(blank=True, default=0)),
                ('totalMonthly', models.IntegerField(blank=True, default=0)),
                ('sendingForPayment', models.BooleanField(default=False)),
                ('priceID', models.CharField(blank=True, max_length=150, null=True)),
                ('paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PostService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('price', models.IntegerField(blank=True)),
                ('monthly', models.IntegerField(blank=True, default=1)),
                ('summary', models.TextField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PriceCatelog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('price', models.IntegerField(blank=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('monthly', models.IntegerField(blank=True, default=1)),
                ('extra_kwargs', models.CharField(blank=True, default='not assigned', max_length=300)),
                ('imageName', models.CharField(blank=True, max_length=150)),
                ('priceCatelog', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='productCatelog', to='my_account.pricecatelog')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('price', models.IntegerField(blank=True)),
                ('monthly', models.IntegerField(blank=True, default=1)),
                ('summary', models.TextField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('priceCatelog', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='service', to='my_account.pricecatelog')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('priceCatelog', 'name')},
            },
        ),
        migrations.CreateModel(
            name='UUIModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('customerID', models.CharField(blank=True, max_length=150, null=True)),
                ('sessionID', models.CharField(blank=True, max_length=150, null=True)),
                ('postSessionID', models.CharField(blank=True, max_length=150, null=True)),
                ('cell', models.CharField(blank=True, max_length=100)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('provState', models.CharField(blank=True, max_length=50)),
                ('postal', models.CharField(blank=True, max_length=50, null=True)),
                ('promotion', models.BooleanField(blank=True, default=False)),
                ('postAccountActivate', models.BooleanField(default=False)),
                ('consult', models.BooleanField(default=False)),
                ('canceled', models.BooleanField(default=False)),
                ('canceledCount', models.IntegerField(default=0)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_account.invoice')),
                ('options', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='my_account.option')),
                ('postInvoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_account.postinvoice')),
                ('postService', models.ManyToManyField(blank=True, related_name='postServices', to='my_account.postservice')),
                ('product', models.ManyToManyField(blank=True, related_name='products', to='my_account.product')),
                ('service', models.ManyToManyField(blank=True, related_name='services', to='my_account.service')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('CA', 'CA'), ('UK', 'UK'), ('US', 'US')], max_length=100)),
                ('subRegion', models.CharField(choices=[('ALB', 'ALB'), ('BC', 'BC'), ('MAN', 'MAN'), ('NB', 'NB'), ('NFLD', 'NFLD'), ('NS', 'NS'), ('ON', 'ON'), ('PEI', 'PEI'), ('QC', 'QC'), ('SASK', 'SASK'), ('LON', 'LON'), ('NY', 'NY'), ('WO', 'WO')], max_length=100)),
                ('fed', models.IntegerField(default=13)),
                ('provState', models.IntegerField(default=15)),
            ],
            options={
                'ordering': ['country'],
                'unique_together': {('country', 'subRegion')},
            },
        ),
        migrations.AddField(
            model_name='postservice',
            name='priceCatelog',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='postService', to='my_account.pricecatelog'),
        ),
        migrations.AddField(
            model_name='postinvoice',
            name='tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_account.tax'),
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('price', models.IntegerField(blank=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('monthly', models.IntegerField(blank=True, default=1)),
                ('reducePerc', models.IntegerField(blank=True, null=True)),
                ('specialOffer', models.BooleanField(default=False)),
                ('updateValue', models.BooleanField(default=False)),
                ('postServices', models.ManyToManyField(blank=True, to='my_account.postservice')),
                ('priceCatelog', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='my_account.pricecatelog')),
                ('products', models.ManyToManyField(blank=True, to='my_account.product')),
                ('services', models.ManyToManyField(blank=True, to='my_account.service')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='tax',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='my_account.tax'),
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.IntegerField(blank=True, default=1)),
                ('monthly', models.IntegerField(blank=True, default=1)),
                ('desc', models.TextField(blank=True)),
                ('priceCatelog', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='priceName', to='my_account.pricecatelog')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('priceCatelog', 'name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='postservice',
            unique_together={('priceCatelog', 'name')},
        ),
    ]
